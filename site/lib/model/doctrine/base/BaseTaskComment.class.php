<?php

/**
 * BaseTaskComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $task_id
 * @property integer $user_id
 * @property string $comment
 * @property boolean $can_view
 * @property sfGuardUser $User
 * @property Task $Task
 * 
 * @method integer     getTaskId()   Returns the current record's "task_id" value
 * @method integer     getUserId()   Returns the current record's "user_id" value
 * @method string      getComment()  Returns the current record's "comment" value
 * @method boolean     getCanView()  Returns the current record's "can_view" value
 * @method sfGuardUser getUser()     Returns the current record's "User" value
 * @method Task        getTask()     Returns the current record's "Task" value
 * @method TaskComment setTaskId()   Sets the current record's "task_id" value
 * @method TaskComment setUserId()   Sets the current record's "user_id" value
 * @method TaskComment setComment()  Sets the current record's "comment" value
 * @method TaskComment setCanView()  Sets the current record's "can_view" value
 * @method TaskComment setUser()     Sets the current record's "User" value
 * @method TaskComment setTask()     Sets the current record's "Task" value
 * 
 * @package    reminder
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTaskComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('task_comment');
        $this->hasColumn('task_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('comment', 'string', 500, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 500,
             ));
        $this->hasColumn('can_view', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             ));

        $this->option('orderBy', 'created_at DESC');
        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('Task', array(
             'local' => 'task_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}